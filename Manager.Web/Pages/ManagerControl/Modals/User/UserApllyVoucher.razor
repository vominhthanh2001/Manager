<PageTitle>@Title</PageTitle>
<Modal @ref="Ref" Title="@Title">
    <BodyTemplate>
        <EditForm Model="Voucher" OnValidSubmit="OnHandlerVaildSubmit">
            <DataAnnotationsValidator />
            <div class="mb-3 mt-3">
                <label class="control-label mb-1">Số ngày</label>
                <Dropdown Color="DropdownColor.Secondary">
                    <DropdownToggleButton>@voucherSelected</DropdownToggleButton>
                    <DropdownMenu>
                        @foreach (var voucher in Voucher.Vouchers)
                        {
                            string text = VoucherModel.ConvertTextToTime(voucher);
                            <DropdownItem Type="DropdownItemType.Button" @onclick="()=>ProductSelected(text)">@text</DropdownItem>
                        }
                    </DropdownMenu>
                </Dropdown>
            </div>
        </EditForm>
    </BodyTemplate>
    <FooterTemplate>
        <Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="OnHandlerVaildSubmit">Áp dụng</Button>
        <Button Type="ButtonType.Button" Color="ButtonColor.Danger" @onclick="HideAsync">Xóa</Button>
    </FooterTemplate>
</Modal>

<Toasts class="p-3" Messages="ToastMessageUtil.Messages" AutoHide="true" Delay="6000" Placement="ToastsPlacement.TopRight" />

@code {
    private string Title => $"Tặng voucher cho các tài khoản";
    private VoucherModel Voucher = new();
    private string voucherSelected { get; set; } = "Chọn ngày";

    [Parameter]
    public Modal Ref { get; set; }

    [Parameter]
    public EventCallback OnHandlerVaildSubmitAndReload { get; set; }

    private void ProductSelected(string text)
    {
        voucherSelected = text;
    }

    private async Task OnHandlerVaildSubmit()
    {

    }

    public async Task ShowAsync() => await Ref.ShowAsync();
    public async Task HideAsync()
    {
        await OnHandlerVaildSubmitAndReload.InvokeAsync();
        await Ref.HideAsync();
    }
}
